version: '3.4'

services:
    bot:
        build:
            context: ./bot
            dockerfile: Dockerfile
        container_name: bot_image
        environment:
            TOKEN: ${TOKEN}
            HOSTA: ${RM_HOST}
            PORTA: ${RM_PORT}
            USERA: ${RM_USER}
            PASSWORDA: ${RM_PASSWORD}
            DB_HOST: ${DB_HOST}
            USER_DB: ${DB_USER}
            PASS_DB: ${DB_PASSWORD}
            DB: ${DB_DATABASE}
            PORT_DB: ${DB_PORT}
        depends_on:
          - db
    db:
        build:
            context: ./db
            dockerfile: Dockerfile
        container_name: db_image
        command: |
            postgres
            -c listen_addresses="*"
            -c wal_level=replica
            -c hot_standby=on
            -c max_wal_senders=10
            -c max_replication_slots=10
            -c hot_standby_feedback=on
            -c log_replication_commands=on
            -c archive_mode=on
            -c archive_command='cp %p /oracle/pg_data/archive/%f'
            -c wal_log_hints=on
            -c log_directory="/var/log/postgresql"
            -c log_filename="postgres.log"
            -c logging_collector=on
        environment:
            DB_REPL_USER: ${DB_REPL_USER}
            DB_REPL_PASS: ${DB_REPL_PASSWORD}
            DB_USER: ${DB_USER}
            DB_PASS: ${DB_PASSWORD}
            DB_NAME: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
          - ${DB_PORT}:${DB_PORT}
    db_repl:
        build:
            context: ./db_repl
            dockerfile: Dockerfile
        image: 10.0.2.14:5000/db-repl-image
        container_name: db_repl_image
        ports:
          - 5433:${DB_PORT}
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        command: |
            bash -c "
            su postgres
            rm -rf /var/lib/postgresql/data/*
            export PGPASSWORD=${DB_REPL_PASSWORD} &&
            until pg_basebackup -D /var/lib/postgresql/data -R --slot=replication_slot -h ${DB_HOST} -U ${DB_REPL_USER}
            do
            echo 'Wait...'
            sleep 1s
            done
            echo 'Backup done'
            chown -R postgres:postgres /var/lib/postgresql/data
            chmod 0700 /var/lib/postgresql/data
            su postgres -c 'exec /usr/lib/postgresql/16/bin/postgres -D /var/lib/postgresql/data'
            "
        depends_on:
          - db
